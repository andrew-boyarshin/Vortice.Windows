<?xml version="1.0" encoding="utf-8"?>
<config id="vortice-directx" xmlns="urn:SharpGen.Config">
  <assembly>Vortice.DirectX</assembly>
  <namespace>Vortice</namespace>
  <depends>SharpGen.Runtime.COM</depends>

  <sdk name="WindowsSdk" version="10.0.19041.0" />
  <sdk name="StdLib" />
  <include-dir override="true">$(THIS_CONFIG_PATH)/../native/include/directx</include-dir>
  
  <include file="d3dcommon.h" namespace="Vortice.Direct3D" attach="true" output="Direct3D" />
  <include file="dxcore_interface.h" namespace="Vortice.DXCore" attach="true" output="DXCore" />
  <include file="dxcore.h" namespace="Vortice.DXCore" attach="true" output="DXCore" />

  <extension>
    <define struct="Vortice.RawRect" sizeof="16" />
    <define struct="Vortice.RawRectF" sizeof="16" />

    <!-- System.Numerics types -->
    <define struct="System.Numerics.Vector2" sizeof="8" />
    <define struct="System.Numerics.Vector3" sizeof="12" />
    <define struct="System.Numerics.Vector4" sizeof="16" />
    <define struct="System.Numerics.Quaternion" sizeof="16" />
    <define struct="System.Numerics.Matrix3x2" sizeof="24" />
    <define struct="System.Numerics.Matrix4x4" sizeof="64" />
    <define struct="System.Numerics.Plane" sizeof="16" />
    
    <!-- Vortice.Mathematics types -->
    <define struct="Vortice.Mathematics.Point" sizeof="8" />
    <define struct="Vortice.Mathematics.PointF" sizeof="8" />
    <define struct="Vortice.Mathematics.Size" sizeof="8" />
    <define struct="Vortice.Mathematics.SizeF" sizeof="8" />
    <define struct="Vortice.Mathematics.Rectangle" sizeof="16" />
    <define struct="Vortice.Mathematics.RectangleF" sizeof="16" />
    <define struct="Vortice.Mathematics.Color3" sizeof="12" />
    <define struct="Vortice.Mathematics.Color4" sizeof="16" />
    <define struct="Vortice.Mathematics.Int3" sizeof="12" />
    <define struct="Vortice.Mathematics.Int4" sizeof="16" />
    <define struct="Vortice.Mathematics.Viewport" sizeof="24" />
    <define struct="Vortice.Mathematics.Box" sizeof="24" />
    <define struct="Vortice.Mathematics.Matrix3x3" sizeof="36" />
    <define struct="Vortice.Mathematics.Matrix3x4" sizeof="48" />
    <define struct="Vortice.Mathematics.Matrix4x3" sizeof="48" />
    <define struct="Vortice.Mathematics.Matrix5x4" sizeof="80" />

    <const from-guid="WKPDID_D3DDebugObjectName" class="Vortice.CommonGuid" type="System.Guid" name="DebugObjectName">new System.Guid("$1")</const>
    <create class="CommonGuid" visibility="public" />

    <create class="Vortice.DXCore.DXCore" visibility="public static" />
  </extension>

  <bindings>
    <bind from="uint32_t" to="System.Int32" />
    <bind from="UINT32" to="System.Int32" />
    <bind from="UINT" to="System.Int32" />
    <bind from="LUID" to="System.Int64"/>
    <bind from="HWND" to="System.IntPtr"/>
    <bind from="HDC" to="System.IntPtr"/>
    <bind from="HINSTANCE" to="System.IntPtr"/>
    <bind from="HBITMAP" to="System.IntPtr"/>
    <bind from="HICON" to="System.IntPtr"/>
    <bind from="HPALETTE" to="System.IntPtr"/>
    <bind from="HMONITOR" to="System.IntPtr"/>

    <bind from="POINT" to="Vortice.Mathematics.Point" />
    <bind from="SIZE" to="Vortice.Mathematics.Size" />
    <bind from="RECT" to="Vortice.RawRect" />
    <bind from="D3DCOLORVALUE" to="Vortice.Mathematics.Color4" />
  </bindings>

  <naming>
    <short name="(R(\d).*)$">$1</short>
    <short name="(B(\d).*)$">$1</short>
    <short name="(G(\d).*)$">$1</short>
    <short name="(A(\d).*)$">$1</short>
    <short name="(X(\d).*)$">$1</short>
    <short name="(BC(\d).*)$">$1</short>
    <short name="(AYUV)$">$1</short>
    <short name="(YUY2)$">$1</short>
    <short name="(NV\d+)$">$1</short>
    <short name="(AI\d+)$">$1</short>
    <short name="(IA\d+)$">$1</short>
    <short name="DESCRIPTOR">Descriptor</short>
    <short name="DESCRIPTION">Description</short>
    <short name="DESC">Description</short>
    <short name="TOPLEFT">TopLeft</short>
    <short name="UINT32">UInt32</short>
    <short name="UINT64">UInt64</short>
    <short name="IUNKNOWN">IUnknown</short>
    <short name="RECTANGLE">Rectangle</short>
    <short name="RECTS">Rectangles</short>
    <short name="RECT">Rectangle</short>
    <short name="LINE">Line</short>
    <short name="POINT">Point</short>
    <short name="POINTS">Points</short>
    <short name="TRIANGLE">Triangle</short>
    <short name="LIST">List</short>
    <short name="ADJACENCY">Adjacency</short>
    <short name="ADJ">Adjacency</short>
    <short name="STRIP">Strip</short>
    <short name="SRV">ShaderResourceView</short>
    <short name="DSV">DepthStencilView</short>
    <short name="RTV">RenderTargetView</short>
    <short name="UAVS">UnorderedAccessViews</short>
    <short name="UAV">UnorderedAccessView</short>
    <short name="TEXTURE">Texture</short>
    <short name="TEXT">Text</short>
    <short name="CUBE">Cube</short>
    <short name="TEX">Texture</short>
    <short name="1D">1D</short>
    <short name="2D">2D</short>
    <short name="3D">3D</short>
    <short name="MS">Multisampled</short>
    <short name="RW">RW</short>
    <short name="ARRAYSIZE">ArraySize</short>
    <short name="ARRAYSLICE">ArraySlice</short>
    <short name="ARRAYS">Arrays</short>
    <short name="ARRAY">Array</short>
    <short name="BUFFERS">Buffers</short>
    <short name="BUFFER">Buffer</short>
    <short name="BUFFEREX">BufferExtended</short>
    <short name="CBV">ConstantBufferView</short>
    <short name="CBUFFER">ConstantBuffer</short>
    <short name="TBUFFER">TextureBuffer</short>
    <short name="BYTES">Bytes</short>
    <short name="BYTE">Byte</short>
    <short name="UINT8">UInt8</short>
    <short name="UINT">UInt</short>
    <short name="SINT">SInt</short>
    <short name="UNORM">UNorm</short>
    <short name="SNORM">SNorm</short>
    <short name="SRGB">SRgb</short>
    <short name="POINTER">Pointer</short>
    <short name="POINTERS">Pointers</short>
    <short name="NOPERSPECTIVE">NoPerspective</short>
    <short name="POINTLIST">PointList</short>
    <short name="LINELIST">LineList</short>
    <short name="LINESTRIP">LineStrip</short>
    <short name="TRIANGLELIST">TriangleList</short>
    <short name="COMPUTESHADER">ComputeShader</short>
    <short name="DEPTHSTENCIL">DepthStencil</short>
    <short name="DEPTHSTENCILVIEW">DepthStencilView</short>
    <short name="DOMAINSHADER">DomainShader</short>
    <short name="GEOMETRYSHADER">GeometryShader</short>
    <short name="HULLSHADER">HullShader</short>
    <short name="MIN8FLOAT">Min8Float</short>
    <short name="MIN10FLOAT">Min10Float</short>
    <short name="MIN16FLOAT">Min16Float</short>
    <short name="MIN12INT">Min12Int</short>
    <short name="MIN16INT">Min16Int</short>
    <short name="MIN16UINT">Min16UInt</short>
    <short name="PIXELFRAGMENT">PixelFragment</short>
    <short name="PIXELSHADER">PixelShader</short>
    <short name="RENDERTARGETVIEW">RenderTargetView</short>
    <short name="SAMPLER1D">Sampler1D</short>
    <short name="SAMPLER2D">Sampler2D</short>
    <short name="SAMPLER3D">Sampler3D</short>
    <short name="SAMPLERCUBE">SamplerCube</short>
    <short name="VERTEXFRAGMENT">VertexFragment</short>
    <short name="VERTEXSHADER">VertexShader</short>
    <short name="SHAREDEXP">SharedExp</short>
  </naming>

  <mapping>
    <map enum="D3D(.*)" name-tmp="$1" />
    <map enum-item="D3D(?!_PF_)(.*)" name-tmp="$1" />
    <map enum-item="D3D_INTERPOLATION(.*)" name-tmp="$1" />
    <remove enum-item="D3D(\d+)_CBF_USERPACKED.*"/>
    <remove enum-item="D3D(\d+)_PRIMITIVE_TOPOLOGY_.*" />
    <remove enum-item="D3D(\d+)_PRIMITIVE_.*" />
    <remove enum-item="D3D(\d+)_SRV_DIMENSION_.*" />
    <remove enum-item="D3D(\d+_1)_SRV_DIMENSION_.*" />
    <remove enum-item="D3D(\d+)_SVC_.*" />
    <remove enum-item="D3D(\d+)_SVF_.*" />
    <remove enum-item="D3D(\d+)_SVT_.*" />
    <remove enum-item="D3D(\d+)_SIF_.*" />
    <remove enum-item="D3D(\d+)_SIT_.*" />
    <remove enum-item="D3D(\d+)_CT_.*" />
    <remove enum-item="D3D(\d+)_NAME_.*" />
    <remove enum-item="D3D(\d+)_INCLUDE_.*" />
    <remove enum-item="D3D(\d+)_RETURN_TYPE_.*" />
    <remove enum-item="D3D(\d+)_TESSELLATOR_OUTPUT_.*" />
    <remove enum-item="D3D(\d+)_TESSELLATOR_DOMAIN_.*" />
    <remove enum-item="D3D(\d+)_TESSELLATOR_PARTITIONING_.*" />
    <remove enum-item="D3D(\d+)_REGISTER_COMPONENT_.*" />
    <map enum="D3D_PRIMITIVE" name="InputPrimitive" />
    <map enum-item="D3D_FEATURE_LEVEL_(.*)" name="Level_$1" />
    <map enum="D3D_SRV_DIMENSION" name="ShaderResourceViewDimension" />
    <map enum-item="D3D_SRV_DIMENSION_(.*)" name-tmp="$1" />
    <map enum-item="D3D_PRIMITIVE_(\d+)_CONTROL_POINT_PATCH" name="PatchWith$1ControlPoints" />
    <map enum-item="D3D_PRIMITIVE_([^0-9].*)" name-tmp="$1" />
    <map enum="D3D_PRIMITIVE_TOPOLOGY" name="PrimitiveTopology" />
    <map enum-item="D3D_PRIMITIVE_TOPOLOGY_(.*)" name-tmp="$1" />
    <map enum-item="D3D_PRIMITIVE_TOPOLOGY_(\d+)_CONTROL_POINT_PATCHLIST" name="PatchListWith$1ControlPoints" />
    <map enum="D3D_SHADER_CBUFFER_FLAGS" name="ConstantBufferFlags" />
    <map enum-item="D3D_SVC_(.*)" name-tmp="$1" />
    <map enum-item="D3D_SVF_(.*)" name-tmp="$1" />
    <map enum-item="D3D_SVT_(.*)" name-tmp="$1" />
    <map enum-item="D3D_SVT_MIN(\d+)(.*)" name-tmp="MIN$2$1"/>
    <map enum-item="D3D_SIF_(.*)" name-tmp="$1" />
    <map enum-item="D3D_SIT_(.*)" name-tmp="$1" />
    <map enum-item="D3D_CT_(.*)" name-tmp="$1" />
    <map enum="D3D_DRIVER_TYPE" name="DriverType" />
    <map enum-item="D3D_DRIVER_TYPE_(.*)" name-tmp="$1" />
    <map enum="D3D_NAME" name="SystemValueType" />
    <map enum-item="D3D_NAME_(.*)" name-tmp="$1" />
    <map enum="D3D_INCLUDE_TYPE" name="IncludeType" />
    <map enum-item="D3D_INCLUDE_(.*)" name-tmp="$1" />
    <map enum-item="D3D_RETURN_TYPE_(.*)" name-tmp="$1" />
    <map enum-item="D3D_TESSELLATOR_DOMAIN_(.*)" name-tmp="$1" />
    <map enum-item="D3D_TESSELLATOR_DOMAIN_TRI" name="Triangle" />
    <map enum-item="D3D_TESSELLATOR_OUTPUT_(.*)" name-tmp="$1" />
    <map enum-item="D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW" name="TriangleCounterclockwise" />
    <map enum-item="D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW" name="TriangleClockwise" />
    <map enum-item="D3D_TESSELLATOR_PARTITIONING_(.*)" name-tmp="$1" />
    <map enum-item="D3D_TESSELLATOR_PARTITIONING_POW2" name="PowerOfTwo" />
    <map enum="D3D_REGISTER_COMPONENT_TYPE" name="RegisterComponentType" />
    <map enum-item="D3D_REGISTER_COMPONENT_(.*)" name-tmp="$1" />
    <map enum="D3D_CBF_USERPACKED" name="UserPacked" />
    <map enum="D3D_PF_NONE" name="None" />
    <map enum="D3D_PF_IN" name="In" />
    <map enum="D3D_PF_OUT" name="Out" />

    <!-- d3dcommon structs -->
    <map struct="D3D_SHADER_MACRO" name="ShaderMacro" native="true" marshal="true" />

    <map interface="ID3D10Blob" name="Blob" />
    <map interface="ID3DInclude" name="Include" callback="true" />
    <map interface="ID3DDestructionNotifier" name="DestructionNotifier" callback="true" />

    <!-- DxCore -->
    <map enum="DXCore(.*)" name-tmp="$1" />
    <map struct="DXCore(.+)" name-tmp="$1" />
    
    <map function="DXCoreCreateAdapterFactory" dll='"DxCore.dll"' group="Vortice.DXCore.DXCore" hresult="true" check="false" visibility="private" />
    <map param="DXCoreCreateAdapterFactory.*?::ppvFactory" attribute="out" />

    <map method="IDXCoreAdapterFactory::CreateAdapterList" visibility="private" name="CreateAdapterList" hresult="true" check="false" />
    <map method="IDXCoreAdapterFactory::GetAdapterByLuid" visibility="private" name="GetAdapterByLuid" hresult="true" check="false" />
    <map param="IDXCoreAdapterFactory::RegisterEventNotification::eventCookie" return="true"/>

    <map method="IDXCoreAdapterList::GetAdapter" visibility="private" name="GetAdapter" hresult="true" check="false" />
    <map method="IDXCoreAdapterList::GetFactory" visibility="private" name="GetFactory" hresult="true" check="false" />
    <map method="IDXCoreAdapterList::Sort" hresult="true" check="false" />

    <map method="IDXCoreAdapter::GetFactory" visibility="private" hresult="true" check="false" />
    <map method="IDXCoreAdapter::GetPropertySize" hresult="true" check="false" />
    <map method="IDXCoreAdapter::GetProperty" hresult="true" check="false" />
    <map param="IDXCoreAdapter::GetProperty::propertyData" type="void" attribute="in" />
    <map method="IDXCoreAdapter::SetState" visibility="private" hresult="true" check="false" />
    <map method="IDXCoreAdapter::QueryState" visibility="private" hresult="true" check="false" />
    <map param="IDXCoreAdapter::QueryState::outputBuffer" type="void" attribute="in" />
  </mapping>
</config>
